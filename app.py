import streamlit as st
from ris_converter import RobustRISConverter
import datetime

st.title("üìö –¶–ú–ë –ö–∞—Ç–∞–ª–æ–≥ —Å—Ç–∞—Ç–∏–∏ ‚ûî RIS –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–Ω–µ")

st.markdown("""
–ö–ª–∏–∫–Ω–µ—Ç–µ –ö–æ–Ω–≤–µ—Ä—Å–∏—è –∑–∞ –¥–∞ –≤–∏–¥–∏—Ç–µ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞ –≤ RIS —Ñ–æ—Ä–º–∞—Ç –∏ –ò–∑—Ç–µ–≥–ª—è–Ω–µ.
""")

user_text = st.text_area("–ö–æ–ø–∏—Ä–∞–π—Ç–µ –∑–∞–ø–∏—Å–∏—Ç–µ —Ç—É–∫ :", height=200, value='')

if 'ris_exp' not in st.session_state:
    st.session_state['ris_exp'] = ''

if st.button("üîÑ Convert to RIS"):
    converter = RobustRISConverter()
    ris = converter.process_text_to_ris(user_text)
    st.session_state['ris_exp'] = ris.strip()
    if ris.strip() and "No valid bibliographic" not in ris:
        st.success(f"–ö–æ–Ω–≤–µ—Ç–∏—Ä–∞–Ω–∏ —Å–∞ {ris.count('TY  - JOUR')} –∑–∞–ø–∏—Å(–∞) ")
        st.text_area("RIS Output", value=st.session_state['ris_exp'], height=250)
    else:
        st.warning("–ù–µ —Å–∞ –æ—Ç–∫—Ä–∏—Ç–∏ –≤–∞–ª–∏—Å–Ω–∏ –∑–∞–ø–∏—Å–∏.")

if st.session_state['ris_exp']:
    st.download_button(
        label="üíæ Download .RIS file",
        data=st.session_state['ris_exp'],
        file_name=f"bibliography_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}.ris"
    )
